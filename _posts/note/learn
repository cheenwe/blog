## 在线学习平台

Sql : https://sqlzoo.net/wiki/SELECT_basics/zh

Git: https://learngitbranching.js.org/?locale=zh_CN



##价值创造流程

1. 从线索到回款(LTC), 指对从线索到回款进行管理的端到端流程, 包括线索管理, 验证商机, 设计方案,投标, 商务谈判, 合同评审, 合同签订, 合同履行等环节;
2. 集成产品开发: 项目管理的过程
3. 从问题到解决: (ITR), 指确认并解决售后的客户反馈.对产品进行改造升级是该业务流程的根本
企业价值模型的精髓; 每个价值创造流程的端到端都必须打通, 建立多层次的价值实现流程,主要以客户场景进行划分或综合,各业务流程可以协同使用,或互相调用.


## 网站的可用性（Avaliability）描述网站可有效访问的特性。

```

1、网站可用性的度量与考核
网站不可用时间（故障时间）=故障修复时间点-故障发现（报告）时间点
网站年度不可用时间=（1-网站不可用时间/年度时间）× 100%
可用性指标时网站架构设计的重要指标，对外是服务承诺，对内是考核指标，具体到每个工程师，更多的是使用故障分。
所谓故障分是指对网站故障进行分类加权计算故障责任的方法。如下是个案例：
分类描述权重
事故级故障严重故障，网站整体不可用100
A类故障网站访问不顺畅或核心功能不可用20
B类故障非核心功能不可用，或核心功能少数用户不能访问5
C类故障其他故障1
故障分的计算公式为：
故障分=故障时间（分钟）* 故障权重
2、网站的高可用架构
一个典型的网站设计通常遵循如下图所示的基本分层模型。

￼

在负载的大型网站架构中，划分的粒度会更小，更详细，但通常还是能够把这些服务器划分到这三层中。

￼

对于应用层的服务器通常为了应对高并发的访问请求，会通过负载均衡设备将一组服务器组成一个集群共同 对外提供服务，当负载均衡设备通过心跳检测到某台服务器不可用时，就将其从集群列表中提出，并将请求分发到集群中其他 可用的服务器上，是整个集群保存可用，从而实现应用高可用。
位于服务层的服务器情况和应用层类似，也是通过集群方式实现高可用，只是这些服务器被应用层通过分布式服务调用框架访问， 分布式服务调度框架会在应用层客户端中实现负载均衡功能。
位于数据层的服务器情况比较特殊，数据服务器上存储着数据，为了保证数据不丢失，数据访问服务不中断，需要在数据写入时进行数据同步复制，将数据写入多台服务器上，实现数据冗余备份。
网站升级的频率一般都非常高，每次网站发布都需要关闭服务，重新启动系统，相当于服务器宕机。因此网站的可用性架构还需要考虑到网站升级 发布引起的宕机。


```

## Elasticsearch 安全性

```

“很有可能是团队忽视了数据安全，再加上服务器防火墙对于端口开放策略过于激进，导致 Elasticsearch 集群只要一部署即可公网访问。另外，不少开发人员及其团队在认知上更多地把 Elasticsearch 看成是与 MySQL 同等的存储系统，所以在部署以后并没有太多地关心其访问控制策略和数据安全。而且 Elastisearch 开箱即用的特点也让开发和运维人员放松了对安全的重视。”

如何预防数据泄露呢？首先，Elasticsearch 开源版本是不具备任何数据保护功能的，只有基本的攻击保护，例如防火墙。不过，Elasticsearch 产品的提供商 Elastic 为订阅用户提供了相关的数据保护功能，例如认证和授权、数据加密（通讯加密）、审计合规等。如果自己搞不定安全问题，选择商业版本也是一条不错的路子。
如果只想开源版本，技术专家也给出了几个低成本的防止数据泄露的措施：
1）服务器必须要有防火墙，不能随意对外开放端口；
2）Elasticsearch 集群的端口包括 TCP 和 HTTP，都不能暴露在公网；
3）Elasticsearch 集群禁用批量删除索引功能；
4）Elasticsearch 中保存的数据要做基本的脱敏处理；
5）加强监控和告警，能够在安全事件发生的第一时间感知并启动紧急预案，将损失降到最低。
```



## Kong
```
Kong 基于Openresty的流量网关

Kong 基于 OpenResty，是一个云原生、快速、可扩展、分布式的微服务抽象层（Microservice Abstraction Layer），也叫 API 网关（API Gateway），在 Service Mesh 里也叫 API 中间件（API Middleware）。
Kong 开源于 2015 年，核心价值在于高性能和扩展性。从全球 5000 强的组织统计数据来看，Kong 是现在依然在维护的，在生产环境使用最广泛的 API 网关。
Kong 宣称自己是世界上最流行的开源微服务 API 网关（The World’s Most Popular Open Source Microservice API Gateway）。
核心优势：
l 可扩展：可以方便的通过添加节点水平扩展，这意味着可以在很低的延迟下支持很大的系统负载。
l 模块化：可以通过添加新的插件来扩展 Kong 的能力，这些插件可以通过 RESTful Admin API 来安装和配置。
l 在任何基础架构上运行：Kong 可以在任何地方都能运行，比如在云或混合环境中部署 Kong，单个或全球的数据中心。


https://docs.konghq.com/
```


## Lmod 常用命令

1. 查看可用的软件模块
module avail
2. 载入指定的软件模块
module load module_name
3. 查看当前已经载入的模块
module list
4. 卸载已经载入的模块
module unload module_name



## 再生龙

http://www.mamicode.com/info-detail-2261652.html

还原从 3 开始即可.

